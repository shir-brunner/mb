<?php

/**
 * This is the model base class for the table "product".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Product".
 *
 * Columns in table "product" available as properties of the model,
 * followed by relations of table "product" available as properties of the model.
 *
 * @property integer $product_id
 * @property string $product_name
 * @property string $product_description
 * @property integer $product_price
 * @property integer $category_id
 * @property integer $product_published
 * @property string $product_image_url
 * @property string $product_icon_url
 * @property string $product_hover_icon_url
 * @property string $product_class_name
 * @property string $product_extra_info
 * @property string $product_create_time
 * @property integer $product_deleted
 *
 * @property Category $category
 * @property ProductStep[] $productSteps
 * @property Request[] $requests
 */
abstract class BaseProduct extends GxActiveRecord {

	public static function model($className = __CLASS__)
	{
		return parent::model($className);
	}

	public function tableName()
	{
		return 'product';
	}

	public static function label($n = 1)
	{
		return Yii::t('app', 'Product|Products', $n);
	}

	public static function representingColumn() {
		return 'product_name';
	}

	public function rules()
	{
		return array(
			array('product_name, product_price, category_id, product_create_time', 'required'),
			array('product_price, category_id, product_published, product_deleted', 'numerical', 'integerOnly'=>true),
			array('product_name', 'length', 'max'=>200),
			array('product_image_url, product_icon_url, product_hover_icon_url', 'length', 'max'=>500),
			array('product_class_name', 'length', 'max'=>150),
			array('product_description, product_extra_info', 'safe'),
			array('product_description, product_published, product_image_url, product_icon_url, product_hover_icon_url, product_class_name, product_extra_info, product_deleted', 'default', 'setOnEmpty' => true, 'value' => null),
			array('product_id, product_name, product_description, product_price, category_id, product_published, product_image_url, product_icon_url, product_hover_icon_url, product_class_name, product_extra_info, product_create_time, product_deleted', 'safe', 'on' => 'search'),
		);
	}

	public function relations()
	{
		return array(
			'category' => array(self::BELONGS_TO, 'Category', 'category_id'),
			'productSteps' => array(self::HAS_MANY, 'ProductStep', 'product_id'),
			'requests' => array(self::HAS_MANY, 'Request', 'product_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels()
	{
		return array(
			'product_id' => Yii::t('app', ''),
			'product_name' => Yii::t('app', 'Name'),
			'product_description' => Yii::t('app', 'Description'),
			'product_price' => Yii::t('app', 'Price'),
			'category_id' => null,
			'product_published' => Yii::t('app', 'Published'),
			'product_image_url' => Yii::t('app', 'Image Url'),
			'product_icon_url' => Yii::t('app', 'Icon Url'),
			'product_hover_icon_url' => Yii::t('app', 'Hover Icon Url'),
			'product_class_name' => Yii::t('app', 'Class Name'),
			'product_extra_info' => Yii::t('app', 'Extra Info'),
			'product_create_time' => Yii::t('app', 'Create Time'),
			'product_deleted' => Yii::t('app', 'Deleted'),
			'category' => null,
			'productSteps' => null,
			'requests' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('product_id', $this->product_id);
		$criteria->compare('product_name', $this->product_name, true);
		$criteria->compare('product_description', $this->product_description, true);
		$criteria->compare('product_price', $this->product_price);
		$criteria->compare('t.category_id', $this->category_id);
		$criteria->compare('product_published', $this->product_published);
		$criteria->compare('product_image_url', $this->product_image_url, true);
		$criteria->compare('product_icon_url', $this->product_icon_url, true);
		$criteria->compare('product_hover_icon_url', $this->product_hover_icon_url, true);
		$criteria->compare('product_class_name', $this->product_class_name, true);
		$criteria->compare('product_extra_info', $this->product_extra_info, true);
		$criteria->compare('product_create_time', $this->product_create_time, true);
		$criteria->compare('product_deleted', $this->product_deleted);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	public function delete()
	{
		return $this->saveAttributes(array('product_deleted' => 1));
	}

	public function undoDelete()
	{
		return $this->saveAttributes(array('product_deleted' => 0));
	}

	public function defaultScope()
	{
		$alias = $this->getTableAlias(true, false);

		return array('condition' => "$alias.product_deleted = 0");
	}
	protected function beforeValidate()
	{
		if($this->isNewRecord && empty($this->product_create_time))
		{
			$this->setAttribute('product_create_time', date('Y-m-d H:i:s'));
		}

		return parent::beforeValidate();
	}
}