<?php

/**
 * This is the model base class for the table "login_token".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "LoginToken".
 *
 * Columns in table "login_token" available as properties of the model,
 * followed by relations of table "login_token" available as properties of the model.
 *
 * @property integer $login_token_id
 * @property integer $user_id
 * @property string $login_token_hash
 * @property string $login_token_create_time
 * @property integer $login_token_deleted
 *
 * @property User $user
 */
abstract class BaseLoginToken extends GxActiveRecord {

	public static function model($className = __CLASS__)
	{
		return parent::model($className);
	}

	public function tableName()
	{
		return 'login_token';
	}

	public static function label($n = 1)
	{
		return Yii::t('app', 'LoginToken|LoginTokens', $n);
	}

	public static function representingColumn() {
		return 'login_token_hash';
	}

	public function rules()
	{
		return array(
			array('user_id, login_token_hash, login_token_create_time', 'required'),
			array('user_id, login_token_deleted', 'numerical', 'integerOnly'=>true),
			array('login_token_deleted', 'default', 'setOnEmpty' => true, 'value' => null),
			array('login_token_id, user_id, login_token_hash, login_token_create_time, login_token_deleted', 'safe', 'on' => 'search'),
		);
	}

	public function relations()
	{
		return array(
			'user' => array(self::BELONGS_TO, 'User', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels()
	{
		return array(
			'login_token_id' => Yii::t('app', ''),
			'user_id' => null,
			'login_token_hash' => Yii::t('app', 'Hash'),
			'login_token_create_time' => Yii::t('app', 'Create Time'),
			'login_token_deleted' => Yii::t('app', 'Deleted'),
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('login_token_id', $this->login_token_id);
		$criteria->compare('t.user_id', $this->user_id);
		$criteria->compare('login_token_hash', $this->login_token_hash, true);
		$criteria->compare('login_token_create_time', $this->login_token_create_time, true);
		$criteria->compare('login_token_deleted', $this->login_token_deleted);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	public function delete()
	{
		return $this->saveAttributes(array('login_token_deleted' => 1));
	}

	public function undoDelete()
	{
		return $this->saveAttributes(array('login_token_deleted' => 0));
	}

	public function defaultScope()
	{
		$alias = $this->getTableAlias(true, false);

		return array('condition' => "$alias.login_token_deleted = 0");
	}
	protected function beforeValidate()
	{
		if($this->isNewRecord && empty($this->login_token_create_time))
		{
			$this->setAttribute('login_token_create_time', date('Y-m-d H:i:s'));
		}

		return parent::beforeValidate();
	}
}