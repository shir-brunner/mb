<?php

/**
 * This is the model base class for the table "contact".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Contact".
 *
 * Columns in table "contact" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $contact_id
 * @property string $contact_name
 * @property string $contact_email
 * @property string $contact_phone
 * @property string $contact_message
 * @property string $contact_create_time
 * @property integer $contact_deleted
 *
 */
abstract class BaseContact extends GxActiveRecord {

	public static function model($className = __CLASS__)
	{
		return parent::model($className);
	}

	public function tableName()
	{
		return 'contact';
	}

	public static function label($n = 1)
	{
		return Yii::t('app', 'Contact|Contacts', $n);
	}

	public static function representingColumn() {
		return 'contact_name';
	}

	public function rules()
	{
		return array(
			array('contact_name, contact_email, contact_message, contact_create_time', 'required'),
			array('contact_deleted', 'numerical', 'integerOnly'=>true),
			array('contact_name', 'length', 'max'=>200),
			array('contact_email', 'length', 'max'=>300),
			array('contact_phone', 'length', 'max'=>20),
			array('contact_phone, contact_deleted', 'default', 'setOnEmpty' => true, 'value' => null),
			array('contact_id, contact_name, contact_email, contact_phone, contact_message, contact_create_time, contact_deleted', 'safe', 'on' => 'search'),
		);
	}

	public function relations()
	{
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels()
	{
		return array(
			'contact_id' => Yii::t('app', ''),
			'contact_name' => Yii::t('app', 'Name'),
			'contact_email' => Yii::t('app', 'Email'),
			'contact_phone' => Yii::t('app', 'Phone'),
			'contact_message' => Yii::t('app', 'Message'),
			'contact_create_time' => Yii::t('app', 'Create Time'),
			'contact_deleted' => Yii::t('app', 'Deleted'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('contact_id', $this->contact_id);
		$criteria->compare('contact_name', $this->contact_name, true);
		$criteria->compare('contact_email', $this->contact_email, true);
		$criteria->compare('contact_phone', $this->contact_phone, true);
		$criteria->compare('contact_message', $this->contact_message, true);
		$criteria->compare('contact_create_time', $this->contact_create_time, true);
		$criteria->compare('contact_deleted', $this->contact_deleted);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	public function delete()
	{
		return $this->saveAttributes(array('contact_deleted' => 1));
	}

	public function undoDelete()
	{
		return $this->saveAttributes(array('contact_deleted' => 0));
	}

	public function defaultScope()
	{
		$alias = $this->getTableAlias(true, false);

		return array('condition' => "$alias.contact_deleted = 0");
	}
	protected function beforeValidate()
	{
		if($this->isNewRecord && empty($this->contact_create_time))
		{
			$this->setAttribute('contact_create_time', date('Y-m-d H:i:s'));
		}

		return parent::beforeValidate();
	}
}