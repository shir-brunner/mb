<?php

/**
 * This is the model base class for the table "product_step".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "ProductStep".
 *
 * Columns in table "product_step" available as properties of the model,
 * followed by relations of table "product_step" available as properties of the model.
 *
 * @property integer $product_step_id
 * @property string $product_step_name
 * @property string $product_step_view
 * @property integer $product_id
 * @property string $product_step_help_text
 * @property integer $product_step_order
 * @property integer $product_step_deleted
 *
 * @property Product $product
 */
abstract class BaseProductStep extends GxActiveRecord {

	public static function model($className = __CLASS__)
	{
		return parent::model($className);
	}

	public function tableName()
	{
		return 'product_step';
	}

	public static function label($n = 1)
	{
		return Yii::t('app', 'ProductStep|ProductSteps', $n);
	}

	public static function representingColumn() {
		return 'product_step_name';
	}

	public function rules()
	{
		return array(
			array('product_step_name, product_step_view, product_id', 'required'),
			array('product_id, product_step_order, product_step_deleted', 'numerical', 'integerOnly'=>true),
			array('product_step_name', 'length', 'max'=>200),
			array('product_step_view', 'length', 'max'=>300),
			array('product_step_help_text', 'safe'),
			array('product_step_help_text, product_step_order, product_step_deleted', 'default', 'setOnEmpty' => true, 'value' => null),
			array('product_step_id, product_step_name, product_step_view, product_id, product_step_help_text, product_step_order, product_step_deleted', 'safe', 'on' => 'search'),
		);
	}

	public function relations()
	{
		return array(
			'product' => array(self::BELONGS_TO, 'Product', 'product_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels()
	{
		return array(
			'product_step_id' => Yii::t('app', ''),
			'product_step_name' => Yii::t('app', 'Name'),
			'product_step_view' => Yii::t('app', 'View'),
			'product_id' => null,
			'product_step_help_text' => Yii::t('app', 'Help Text'),
			'product_step_order' => Yii::t('app', 'Order'),
			'product_step_deleted' => Yii::t('app', 'Deleted'),
			'product' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('product_step_id', $this->product_step_id);
		$criteria->compare('product_step_name', $this->product_step_name, true);
		$criteria->compare('product_step_view', $this->product_step_view, true);
		$criteria->compare('t.product_id', $this->product_id);
		$criteria->compare('product_step_help_text', $this->product_step_help_text, true);
		$criteria->compare('product_step_order', $this->product_step_order);
		$criteria->compare('product_step_deleted', $this->product_step_deleted);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

	public function delete()
	{
		return $this->saveAttributes(array('product_step_deleted' => 1));
	}

	public function undoDelete()
	{
		return $this->saveAttributes(array('product_step_deleted' => 0));
	}

	public function defaultScope()
	{
		$alias = $this->getTableAlias(true, false);

		return array('condition' => "$alias.product_step_deleted = 0");
	}
}